<?php

namespace App\Filament\Resources\ReviewResource\Pages;

use App\Filament\Resources\ReviewResource;
use App\Models\Product;
use App\Models\Review;
use Filament\Resources\Pages\Page;
use Filament\Tables;
use Filament\Tables\Table;
use Filament\Forms\Form;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Columns\ImageColumn;
use Illuminate\Contracts\View\View;

class ManageReviewsWithStats extends Page implements Tables\Contracts\HasTable
{
    use Tables\Concerns\InteractsWithTable;

    protected static string $resource = ReviewResource::class;
    protected static string $view = 'filament.resources.review-resource.pages.manage-reviews-with-stats';

    public string $activeTab = 'ratings';

    protected function getTableQuery()
    {
        return $this->activeTab === 'reviews'
            ? Review::query()->with(['user', 'product'])
            : Product::query()->withCount('reviews')
                ->withAvg('reviews', 'rating');
    }

    protected function getTableColumns(): array
    {
        return $this->activeTab === 'reviews'
            ? [
                TextColumn::make('user.name')->label('User'),
                ImageColumn::make('product.images.0')
                    ->label('Image')
                    ->disk('public')
                    ->height(50),

                TextColumn::make('product.name')->label('Product'),
                TextColumn::make('rating'),
                TextColumn::make('title'),
                TextColumn::make('created_at')->label('Date')->dateTime(),
            ]
            : [
                ImageColumn::make('images.0')->label('Image')->disk('public'),
                TextColumn::make('name')->label('Product'),
                TextColumn::make('reviews_avg_rating')
                    ->label('AVG Rating')
                    ->formatStateUsing(fn ($state) => number_format($state, 1) . ' â˜…'),
                TextColumn::make('reviews_count')->label('Total Ratings'),
            ];
    }

    public function switchTab(string $tab): void
    {
        $this->activeTab = $tab;
        $this->resetTable();
    }
}
